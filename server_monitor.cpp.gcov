        -:    0:Source:server_monitor.cpp
        -:    0:Programs:7
        -:    1:#include "server_monitor.h" 
        -:    2:
        -:    3://Our singleton class that helps monitor the status of our server
        -:    4:
        -:    5:namespace http {
        -:    6:namespace server {
        -:    7:
        -:    8:bool ServerMonitor::instanceFlag = false;
        -:    9:ServerMonitor* ServerMonitor::single = NULL;
        -:   10:
       27:   11:ServerMonitor* ServerMonitor::getInstance()
        -:   12:{
       27:   13:    if(!instanceFlag)
        -:   14:    {
        1:   15:        single = new ServerMonitor();
        1:   16:        instanceFlag = true;
        1:   17:        return single;
        -:   18:    }
        -:   19:    else
        -:   20:    {
       26:   21:        return single;
        -:   22:    }
        -:   23:}
        -:   24:
    #####:   25:void ServerMonitor::method()
        -:   26:{
    #####:   27:    cout << "Method of the singleton class" << endl;
    #####:   28:}
        -:   29:
        2:   30:std::vector<std::pair<std::string, Response::ResponseCode>> ServerMonitor::getRequests(){
        2:   31:    return mRequests;
        -:   32:} 
        -:   33:
        2:   34:std::vector<std::pair<std::string, std::string>> ServerMonitor::getHandlers(){
        2:   35:    return mHandlers; 
        -:   36:}
        -:   37:
        2:   38:void ServerMonitor::addRequest(std::string url, Response::ResponseCode responseCode){
        2:   39:    std::pair<std::string, Response::ResponseCode> requestInfo = std::make_pair(url, responseCode);
        2:   40:    mRequests.push_back(requestInfo);
        2:   41:}
        -:   42:
       21:   43:void ServerMonitor::addHandler(std::string path, std::string handlerName){
       21:   44:    std::pair<std::string, std::string> handlerInfo = std::make_pair(path, handlerName);
       21:   45:    mHandlers.push_back(handlerInfo);
       21:   46:}
        -:   47:
        -:   48:// int ServerMonitor::getNumRequests(){
        -:   49://     return numRequests;
        -:   50:// }
        -:   51:
        -:   52:// void ServerMonitor::incrementRequests(){
        -:   53://     numRequests++; 
        -:   54:// }
        -:   55:
        -:   56:}
        3:   57:}
