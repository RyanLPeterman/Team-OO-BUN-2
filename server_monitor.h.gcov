        -:    0:Source:server_monitor.h
        -:    0:Programs:7
        -:    1:#ifndef SERVER_MONITOR_H
        -:    2:#define SERVER_MONITOR_H
        -:    3:
        -:    4:#include <iostream>
        -:    5:#include <vector> 
        -:    6:#include <string>
        -:    7:#include "request_handler.h"
        -:    8:
        -:    9:using namespace std;
        -:   10:
        -:   11:namespace http {
        -:   12:namespace server {
        -:   13:class ServerMonitor
        -:   14:{
        -:   15:public:
        -:   16:    static ServerMonitor* getInstance();
        -:   17:    void method();
        -:   18:    ~ServerMonitor()
        -:   19:    {
        -:   20:        instanceFlag = false;
        -:   21:    }
        -:   22:    std::vector<std::pair<std::string, Response::ResponseCode>> getRequests(); 
        -:   23:    std::vector<std::pair<std::string, std::string>> getHandlers(); 
        -:   24:
        -:   25:    void addRequest(std::string url, Response::ResponseCode responseCode); 
        -:   26:    void addHandler(std::string handlerName, std::string path);  
        -:   27:
        -:   28:private:
        -:   29:    static bool instanceFlag;
        -:   30:    static ServerMonitor *single;
        1:   31:    ServerMonitor()
        1:   32:    {
        -:   33:        //private constructor
        1:   34:    }
        -:   35:    
        -:   36:    std::vector<std::pair<std::string, Response::ResponseCode>> mRequests;
        -:   37:    std::vector<std::pair<std::string, std::string>> mHandlers;
        -:   38:};
        -:   39:}
        -:   40:}
        -:   41:#endif 
