        -:    0:Source:response.cpp
        -:    0:Programs:7
        -:    1:#include "request_handler.h"
        -:    2:#include <string>
        -:    3:#include <vector> 
        -:    4:
        -:    5:
        -:    6:namespace http {
        -:    7:	namespace server {
        -:    8:
       11:    9:		void Response::SetStatus(const ResponseCode response_code) {
       11:   10:			responseStatus = response_code; 
       11:   11:		}
        -:   12:
       18:   13:		void Response::AddHeader(const std::string& header_name, const std::string& header_value) {
       18:   14:			mHeaders.push_back(std::make_pair(header_name, header_value));
       18:   15:		}
        -:   16:
       11:   17:		void Response::SetBody(const std::string& body) {
       11:   18:			content = body; 
       11:   19:		}
        -:   20:
        1:   21:		Response::ResponseCode Response::GetStatus(){
        1:   22:			return responseStatus;
        -:   23:		}
        -:   24:
        7:   25:		std::string Response::ToString() {
        7:   26:			std::string responseString = ""; 
        -:   27:
        7:   28:			switch(responseStatus) {
        -:   29:				case OK:
        5:   30:					responseString += "HTTP/1.1 200 OK\r\n";
        5:   31:					break; 
        -:   32:				case BAD_REQUEST: 
        1:   33:					responseString += "HTTP/1.1 400 Bad Request\r\n";
        1:   34:					break;
        -:   35:				case NOT_FOUND:
        1:   36:					responseString += "HTTP/1.1 404 Not Found\r\n";
        1:   37:					break;
        -:   38:			}
        -:   39:
       21:   40:			for(std::vector<std::pair<std::string, std::string>>::const_iterator it = mHeaders.begin(); it != mHeaders.end(); it++){
       14:   41:				responseString += it->first + ": " + it->second + "\r\n"; 
        -:   42:			}
        -:   43:
        -:   44:			//need to end headers with carriage return
        7:   45:			responseString += "\r\n"; 
        -:   46:
        7:   47:			responseString += content; 
        -:   48:
        7:   49:			return responseString; 
        -:   50:		}
        -:   51:
        -:   52:  	} // namespace server
        3:   53:} // namespace http
